#------------------------------------------------
#1. docker-compose -p microservices-comp3095-ecommerce -f docker-compose.yml up -d
#   -- This command will start the containers in detached mode without rebuilding the image (if they already exist)
#
#2. docker-compose -p microservices-comp3095-ecommerce -f docker-compose.yml up -d -- build
#    -- This command forces the rebuild of images, even if the images already exist, before starting the containers
#------------------------------------------------
version: '3.9'


services:

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service    # the directory where the Dockerfile resides
      dockerfile: ./Dockerfile      # Specify the Dockerfile use to build image
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    container_name: mongodb
    # restart: unless-stopped
    # command: mongod --auth
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express-1
    depends_on:
      - mongodb
    networks:
      - spring

# optional volumes section for persisting data
volumes:
  mongo-db:
    driver: local


networks:
  spring:
    driver: bridge

